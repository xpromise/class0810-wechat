<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <title>search</title>
</head>
<body>
  <h2>语音识别功能</h2>
  <button id="btn">点击开始录音</button>
  <ul id="list"></ul>
  <script type="text/javascript" src="https://cdn.bootcss.com/zepto/1.0rc1/zepto.min.js"></script>
  <script type="text/javascript" src="http://res2.wx.qq.com/open/js/jweixin-1.4.0.js"></script>
  <script type="text/javascript">
    /*
      步骤一：绑定域名
        在测试号管理页面绑定JS接口安全域名， 注意只需要域名部分，协议部分去掉
      步骤二：引入JS文件
        http://res2.wx.qq.com/open/js/jweixin-1.4.0.js
      步骤三：通过config接口注入权限验证配置

     */
    $(function () {
      //验证是否有权限使用以下接口
      wx.config({
        debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
        appId: '<%= appID %>', // 必填，公众号的唯一标识
        timestamp: '<%= timestamp %>', // 必填，生成签名的时间戳
        nonceStr: '<%= noncestr %>', // 必填，生成签名的随机串
        signature: '<%= signature %>',// 必填，签名
        jsApiList: [
          'updateAppMessageShareData',
          'updateTimelineShareData',
          'startRecord',
          'stopRecord',
          'translateVoice'
        ] // 必填，需要使用的JS接口列表
      });

      //验证通过会触发当前回调函数
      wx.ready(function(){
        // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，
        // config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。
        // 对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。

        //标志位，代表是否在录音
        let isRecord = false;

        $('#btn').tap(function () {
          if (!isRecord) {
            //开始录音
            wx.startRecord();
            isRecord = true;
          } else {
            //结束录音
            wx.stopRecord({
              success: function (res) {
                //代表录音文件
                const localId = res.localId;
                //语音识别
                wx.translateVoice({
                  localId: localId, // 需要识别的音频的本地Id，由录音相关接口获得
                  isShowProgressTips: 1, // 默认为1，显示进度提示
                  success: function (res) {
                    // alert(res.translateResult); // 语音识别的结果
                    //定义请求地址
                    const url = `http://api.douban.com/v2/movie/search?count=9&callback=?&q=${res.translateResult}`;
                    console.log(url);
                    //发送jsonp的跨域请求
                    //Zepto 将自动替换 ? 为正确的函数名，以执行回调函数
                    $.getJSON(url, function ({subjects}) {
                      // console.log(data);
                      let html = '';
                      subjects.forEach(function (item, index) {
                        html += `<li><h3>${item.title}</h3><img src="${item.images.small}"><p>电影评分：${item.rating.average}</p></li>`
                      })
                      $('#list').html(html);

                      //分享功能， 默认分享第一个电影数据
                      wx.updateAppMessageShareData({
                        title: subjects[0].title, // 分享标题
                        desc: `电影评分：${subjects[0].rating.average}`, // 分享描述
                        link: subjects[0].alt, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                        imgUrl: subjects[0].images.small, // 分享图标
                        success: function () {
                          // 设置成功
                          alert('请点击右上角三点开始分享到朋友或者qq好友');
                        }
                      })

                      wx.updateTimelineShareData({
                        title: subjects[0].title, // 分享标题
                        link: subjects[0].alt, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
                        imgUrl: subjects[0].images.small, // 分享图标
                        success: function () {
                          // 设置成功
                          alert('请点击右上角三点开始分享到朋友圈或者qq空间');
                        }
                      })

                    })
                  }
                });

                isRecord = false;
              }
            });
          }


        })

      });
    })

  </script>
</body>
</html>